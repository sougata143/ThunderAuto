type Car {
  id: ID!
  make: String!
  carModel: String!
  year: Int!
  price: Float!
  images: [CarImage!]!
  rating: Float!
  engineType: EngineType!
  transmission: TransmissionType!
  power: Float!
  acceleration: Float!
  status: CarStatus!
  createdBy: User!
  lastUpdatedBy: User!
  specs: CarSpecs
  reviews: [Review!]!
  fullName: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CarSpecs {
  engine: Engine
  performance: Performance
  chassis: Chassis
  dimensions: Dimensions
  transmission: TransmissionSpecs
  fuel: Fuel
  interior: Interior
  safety: Safety
  technology: Technology
  warranty: Warranty
  features: Features
}

type Engine {
  displacement: Float
  cylinders: Int
  configuration: String
  fuelInjection: String
  turbocharger: Boolean
  supercharger: Boolean
  compression: String
  valvesPerCylinder: Int
  type: String
  engineType: String
  powerOutput: Float
  horsepower: Float
  torque: Float
  compressionRatio: Float
  bore: Float
  stroke: Float
  weight: Float
  oilCapacity: Float
  coolingSystem: String
}

type Performance {
  powerToWeight: Float
  topSpeed: Float
  acceleration060: Float
  acceleration0100: Float
  quarterMile: Float
  brakingDistance60_0: Float
  lateralG: Float
  nurburgringTime: String
  passingAcceleration: Float
  elasticity: Float
  launchControl: Boolean
  performanceMode: [String!]
}

type Chassis {
  bodyType: String
  platform: String
  frontSuspension: String
  rearSuspension: String
  frontBrakes: String
  rearBrakes: String
  wheelSize: String
  tireSize: String
}

type Dimensions {
  length: Float
  width: Float
  height: Float
  wheelbase: Float
  groundClearance: Float
  dragCoefficient: Float
  weight: Float
  distribution: String
}

type TransmissionSpecs {
  type: String
  gears: Int
  clutchType: String
  driveType: String
  differential: String
}

type Fuel {
  fuelType: String
  fuelSystem: String
  tankCapacity: Float
  cityMPG: Float
  highwayMPG: Float
  combinedMPG: Float
  emissionClass: String
}

type Interior {
  seatingCapacity: Int
  doors: Int
  trunkCapacity: Float
  infotainmentScreen: String
  soundSystem: String
  climateZones: Int
  upholsteryMaterial: String
}

type Safety {
  airbags: String
  abs: Boolean
  stabilityControl: Boolean
  tractionControl: Boolean
  parkingSensors: Boolean
  camera: String
  blindSpotMonitoring: Boolean
  laneDepartureWarning: Boolean
  collisionWarning: Boolean
  nightVision: Boolean
}

type Technology {
  infotainmentSystem: String
  screenSize: Float
  appleCarPlay: Boolean
  androidAuto: Boolean
  adaptiveCruiseControl: Boolean
  laneKeepAssist: Boolean
  blindSpotMonitoring: Boolean
  parkingAssist: Boolean
  nightVision: Boolean
  headUpDisplay: Boolean
  surroundViewCamera: Boolean
  digitalKey: Boolean
  mobileApp: Boolean
  overTheAirUpdates: Boolean
  voiceControl: Boolean
  voiceAssistantName: String
  connectivity: ConnectivityFeatures
  smartphone: [String!]
  navigation: String
  headlightType: String
  keylessEntry: Boolean
  startSystem: String
  driverAssistance: [String!]
}

type ConnectivityFeatures {
  bluetooth: Boolean
  wirelessCharging: Boolean
  wifi: Boolean
  soundSystem: String
  speakers: Int
}

type Warranty {
  basic: String
  powertrain: String
  corrosion: String
  roadside: String
  maintenance: String
}

type Features {
  comfort: [String!]
  safety: [String!]
  performance: [String!]
  technology: [String!]
  exterior: [String!]
  interior: [String!]
}

type Review {
  id: ID!
  user: ReviewUser!
  rating: Float!
  comment: String
  createdAt: DateTime!
}

type ReviewUser {
  id: ID!
  firstName: String!
  lastName: String!
}

input CarFilter {
  make: String
  model: String
  year: Int
  engineType: String
  transmission: String
  fuelType: String
  minPrice: Float
  maxPrice: Float
}

input ReviewInput {
  carId: ID
  rating: Float
  comment: String
}

input CarUpdateInput {
  make: String
  carModel: String
  year: Int
  price: Float
  engineType: EngineType
  transmission: TransmissionType
  power: Float
  acceleration: Float
  status: CarStatus
  specs: CarSpecsInput
}

input CarSpecsInput {
  engine: EngineInput!
  performance: PerformanceInput!
  chassis: ChassisInput!
  dimensions: DimensionsInput!
  transmission: TransmissionDetailsInput!
  fuel: FuelInput!
  interior: InteriorInput!
  safety: SafetyInput!
  technology: TechnologyInput!
  warranty: WarrantyInput!
  features: FeaturesInput!
}

input EngineInput {
  displacement: Float
  cylinders: Int
  configuration: String
  fuelInjection: String
  turbocharger: Boolean
  supercharger: Boolean
  compression: String
  valvesPerCylinder: Int
  valveSystem: String
  aspiration: String
  boostPressure: Float
  redlineRpm: Int
  idleRpm: Int
  position: String
  orientation: String
  horsepower: Float
  torque: Float
  compressionRatio: Float
  bore: Float
  stroke: Float
  weight: Float
  oilCapacity: Float
  coolingSystem: String
}

input PerformanceInput {
  powerToWeight: Float
  powerToWeightRatio: Float
  topSpeed: Float
  acceleration060: Float
  acceleration0100: Float
  quarterMile: Float
  quarterMileSpeed: Float
  brakingDistance60_0: Float
  brakingDistance: Float
  lateralG: Float
  nurburgringTime: String
  passingAcceleration: Float
  elasticity: Float
  launchControl: Boolean
  performanceMode: [String!]
}

input ChassisInput {
  bodyType: String
  platform: String
  frontSuspension: String
  rearSuspension: String
  frontBrakes: String
  rearBrakes: String
  wheelSize: String
  tireSize: String
}

input DimensionsInput {
  length: Float
  width: Float
  height: Float
  wheelbase: Float
  groundClearance: Float
  dragCoefficient: Float
  weight: Float
  distribution: String
}

input TransmissionDetailsInput {
  type: TransmissionType
  gears: Int
  clutchType: ClutchType
  driveType: DriveType
  differential: String
}

input FuelInput {
  fuelType: String
  fuelSystem: String
  tankCapacity: Float
  cityMPG: Float
  highwayMPG: Float
  combinedMPG: Float
  emissionClass: String
}

input InteriorInput {
  seatingCapacity: Int
  doors: Int
  trunkCapacity: Float
  infotainmentScreen: String
  soundSystem: String
  climateZones: Int
  upholsteryMaterial: String
}

input SafetyInput {
  airbags: String
  abs: Boolean
  stabilityControl: Boolean
  tractionControl: Boolean
  parkingSensors: Boolean
  camera: String
  blindSpotMonitoring: Boolean
  laneDepartureWarning: Boolean
  collisionWarning: Boolean
  nightVision: Boolean
}

input TechnologyInput {
  infotainmentSystem: String
  screenSize: Float
  appleCarPlay: Boolean
  androidAuto: Boolean
  adaptiveCruiseControl: Boolean
  laneKeepAssist: Boolean
  blindSpotMonitoring: Boolean
  parkingAssist: Boolean
  nightVision: Boolean
  headUpDisplay: Boolean
  surroundViewCamera: Boolean
  digitalKey: Boolean
  mobileApp: Boolean
  overTheAirUpdates: Boolean
  voiceControl: Boolean
  voiceAssistantName: String
  connectivity: ConnectivityFeaturesInput
  smartphone: [String!]
  navigation: String
  headlightType: String
  keylessEntry: Boolean
  startSystem: String
  driverAssistance: [String!]
}

input ConnectivityFeaturesInput {
  bluetooth: Boolean
  wirelessCharging: Boolean
  wifi: Boolean
  soundSystem: String
  speakers: Int
}

input WarrantyInput {
  basic: String
  powertrain: String
  corrosion: String
  roadside: String
  maintenance: String
}

input FeaturesInput {
  comfort: [String!]
  safety: [String!]
  performance: [String!]
  technology: [String!]
  exterior: [String!]
  interior: [String!]
}

input CarInput {
  make: String!
  carModel: String!
  year: Int!
  price: Float!
  engineType: EngineType!
  transmission: TransmissionType!
  power: Float!
  acceleration: Float!
  status: CarStatus!
  specs: CarSpecsInput!
  images: [String!]
  rating: Float
}

enum EngineType {
  GASOLINE
  DIESEL
  ELECTRIC
  HYBRID
  HYDROGEN
  PLUG_IN_HYBRID
}

enum CarStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum TransmissionType {
  MANUAL
  AUTOMATIC
  SEMI_AUTOMATIC
  CVT
}

enum ClutchType {
  MANUAL
  AUTOMATIC
  DUAL_CLUTCH
  TORQUE_CONVERTER
}

enum DriveType {
  FRONT_WHEEL_DRIVE
  REAR_WHEEL_DRIVE
  ALL_WHEEL_DRIVE
  FOUR_WHEEL_DRIVE
  REAR_ENGINE_REAR_WHEEL_DRIVE
  MID_ENGINE_REAR_WHEEL_DRIVE
  FRONT_ENGINE_FRONT_WHEEL_DRIVE
  FRONT_ENGINE_REAR_WHEEL_DRIVE
  MID_ENGINE_ALL_WHEEL_DRIVE
  FRONT_ENGINE_ALL_WHEEL_DRIVE
}

extend type Query {
  cars(filter: CarFilter, limit: Int = 20, offset: Int = 0): [Car!]!
  car(id: ID!): Car
  carsByMake(make: String!): [Car!]!
  carsByYear(year: Int!): [Car!]!
  searchCars(query: String!): [Car!]!
  compareCars(ids: [ID!]!): [Car!]!
  reviews(carId: ID!): [Review!]!
}

extend type Mutation {
  createReview(input: ReviewInput!): Review!
  updateReview(id: ID!, rating: Float!, comment: String!): Review!
  deleteReview(id: ID!): Boolean!
  createCar(input: CarInput!): Car! @auth(requires: ADMIN)
  updateCar(id: ID!, input: CarInput!): Car! @auth(requires: ADMIN)
  deleteCar(id: ID!): Car! @auth(requires: ADMIN)
}
